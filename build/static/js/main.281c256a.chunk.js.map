{"version":3,"sources":["components/footerDate.jsx","shared/card.jsx","shared/Avatar.jsx","shared/auth-context.jsx","components/pages/Backdrop.jsx","shared/Modal.jsx","shared/ErrorModal.jsx","shared/loadingspinner.jsx","USERS/usersitems.jsx","USERS/userslist.jsx","USERS/pages/Users.jsx","PRODUCTS/Prodcutitem.jsx","PRODUCTS/Productlist.jsx","PRODUCTS/pages/userProducts.jsx","shared/Input.jsx","PRODUCTS/pages/UpdateProducts.jsx","shared/imageUpload.jsx","USERS/pages/Auth.jsx","components/pages/Side.jsx","shared/mainheader.jsx","shared/NavLinks.jsx","shared/MainNav.jsx","PRODUCTS/pages/addProducts.jsx","HomePage.jsx","app.jsx","index.js"],"names":["FooterDate","newDate","Date","getFullYear","className","Card","props","style","children","Avatar","src","image","alt","width","height","Authcontext","createContext","isloggedin","userId","Login","Logout","Backdrop","onClick","ModalOverlay","theheader","onSubmit","event","preventDefault","thefooter","Modal","Fragment","show","onCancel","CSSTransition","classNames","in","mountOnEnter","unmountOnExit","timeout","ErrorModal","onClear","error","Button","variant","LoadingSpinner","asOverlay","AsProductLay","i","Usersitems","useState","isLoading","setIsLoading","setError","showConfirmModal","setShowConfirmModal","auth","useContext","fetch","id","method","headers","response","ok","Error","message","deleteUser","console","log","cancelDeleteHandler","contentClass","margin","inverse","danger","to","name","toUpperCase","ProductCount","Userslist","items","length","map","user","key","products","deleteUSER","Users","loadedUsers","setLoadedUsers","loading","setloading","useEffect","json","responsedata","allUsers","fetchUsers","userid","prevUser","filter","p","ProductItem","history","useHistory","deleteProduct","push","ProductIMG","theProduct","description","price","owner","Productlist","product","ondelete","Products","setisloading","loadedProducts","setLoadedProducts","useParams","responseData","fetchUserProducts","deleteid","prevProduct","inputReducer","state","action","type","value","val","Input","useReducer","theupdate","inputState","dispatch","onInput","changeHandler","target","element","placeholder","onChange","required","minLength","min","maxLength","max","rows","htmlFor","label","updateReducer","inputId","inputs","UpdateProducts","isloading","setloadedProducts","productId","updateState","inputhandler","useCallback","fetchProducts","body","JSON","stringify","ImageUpload","file","setfile","previewURL","setpreview","filePicker","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","files","center","current","click","AuthReducer","Auth","isloginMode","setisloginMode","email","password","Authstate","formDATA","FormData","append","messsage","undefined","prevmode","Side","clicked","MainHeader","NavLinks","exact","MAINNavLinks","open","setopen","handleDrawer","e","formReducer","AddProducts","formState","inputHandler","Value","formData","HomePage","App","setuserId","loggedIn","setIsloggedIn","login","uid","expirationdate","expirationTime","getTime","localStorage","setItem","expiration","toISOString","storedData","parse","getItem","routes","logout","removeItem","path","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.281c256a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction FooterDate() {\r\n\r\n    const newDate = new Date().getFullYear();\r\n  return (\r\n    <footer className='footer'>CopyRight&copy;{newDate}</footer>\r\n  )\r\n}\r\n\r\nexport default FooterDate;","import React from 'react';\r\n\r\nimport '../STYLING/card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport '../STYLING/Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;","import { createContext } from \"react\";\r\n\r\nexport const Authcontext = createContext({\r\n    isloggedin: false,\r\n    userId:null,\r\n    Login: () =>{},\r\n    Logout: () =>{}\r\n});","import React from 'react'\r\nimport \"../../STYLING/backdrop.css\";\r\nfunction Backdrop(props) {\r\n  return (\r\n    <div className='backdrop' onClick={props.onClick}></div>\r\n  )\r\n}\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from '../components/pages/Backdrop';\r\nimport '../STYLING/Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  return (\r\n    <div className={'modal__header'}>\r\n      <header className={'modal__content'} >\r\n        <h2>{props.theheader}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={'modal__footer'}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={'modal__footer'} >\r\n          {props.thefooter}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        classNames=\"modal\"\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Modal from '../shared/Modal';\r\n\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      theheader=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      thefooter={<Button variant='outline-light btn-primary' onClick={props.onClear}>CLOSE</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;","import React from 'react';\r\n\r\nimport '../STYLING/loadingspinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n        <div className={`${props.AsProductLay && 'loading-spinner__add-products'}`}>\r\n\r\n        \r\n      <div className=\"lds-dual-ring\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Card from \"../shared/card\";\r\nimport '../STYLING/USERS.css';\r\nimport Avatar from '../shared/Avatar';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Authcontext } from '../shared/auth-context';\r\nimport { useContext } from 'react';\r\nimport ErrorModal from '../shared/ErrorModal';\r\nimport Modal from '../shared/Modal';\r\n\r\n\r\nimport LoadingSpinner from '../shared/loadingspinner';\r\n\r\nfunction Usersitems(props) {\r\n  const [isLoading, setIsLoading] = useState(false);  \r\n  const [error, setError] = useState();\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false); \r\n\r\n  \r\n\r\n\r\n  const auth = useContext(Authcontext);\r\n\r\n\r\n\r\n\r\n\r\n  async function deleteHandler() {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/users/${props.id}`,\r\n        {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json' },\r\n\r\n        });\r\n      if (!response.ok) {\r\n        throw new Error(response.message);\r\n      }\r\n   \r\n      props.deleteUser(props.id);\r\n      setIsLoading(false);\r\n   \r\n      auth.Logout();\r\n      return response;\r\n\r\n    } catch (err) {\r\n    \r\n      setIsLoading(false);\r\n    }\r\n    console.log(\"deleting user\");\r\n  }\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  \r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n   \r\n   <Modal\r\n     show={showConfirmModal}\r\n     onCancel={cancelDeleteHandler}\r\n     theheader=\"Are you sure?\"\r\n     contentClass=\"product-item__modal-content\"\r\n     thefooter={\r\n       <React.Fragment>\r\n         <Button style={{margin:'10px'}} variant='outline-light btn-primary' inverse onClick={cancelDeleteHandler}>\r\n           CANCEL\r\n         </Button>\r\n         <Button variant='outline-light btn-danger' danger onClick={deleteHandler}>\r\n        CONFIRM\r\n         </Button>\r\n         \r\n       </React.Fragment>\r\n     }\r\n   >\r\n    {isLoading && <LoadingSpinner asOverlay />}\r\n     <h3>\r\n  Do you want to delete your account ? you cant undo this once clicked , choose wisely \r\n     </h3>\r\n   </Modal>\r\n      <li className=\"user-item\">\r\n        <Card className=\"user-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <Link to={`${props.id}/products`}>\r\n            <div className=\"user-item__image\">\r\n              <Avatar image={`http://localhost:5000/${props.image}`} alt={props.name} />\r\n            </div>\r\n\r\n            <div className=\"user-item__info\">\r\n              <h2>{props.name.toUpperCase()}</h2>\r\n              <h3>{props.ProductCount} {props.ProductCount === 1 ? \"Product\" : \"Products\"}</h3>\r\n            </div>\r\n          </Link>\r\n          {auth.userId === props.id &&\r\n            <Button \r\n            variant='outline-light btn-danger' \r\n            onClick={showDeleteWarningHandler}>\r\n            REMOVE USER\r\n            </Button>\r\n          }\r\n        </Card>\r\n      </li>\r\n      <div className=\"user-item__info\">\r\n    \r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Usersitems;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../shared/card';\r\nimport Usersitems from './usersitems';\r\n\r\nfunction Userslist(props) {\r\n    if(props.items.length === 0){\r\n        return <div className='users-list center'>\r\n        <Card>\r\n        <h3>NO USERS FOUND , SINGUP MAYBE ?</h3>\r\n        <Link to={'/auth'}><Button variant='outline-light btn-primary'>SIGNUP</Button></Link>\r\n        </Card>\r\n        </div>\r\n    }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n{props.items.map(user =>{\r\n    return(<Usersitems\r\n         key={user.id}\r\n         id={user.id}\r\n         name={user.name}\r\n         ProductCount={user.products.length}\r\n         image={user.image}\r\n         deleteUser={props.deleteUSER}\r\n         \r\n    />\r\n    )\r\n})}\r\n</ul>\r\n  )\r\n \r\n}\r\n\r\nexport default Userslist;","import React, { useEffect, useState } from 'react'\r\nimport UserList from \"../userslist\";\r\nimport LoadingSpinner from '../../shared/loadingspinner';\r\nimport ErrorModal from '../../shared/ErrorModal';\r\n\r\nfunction Users() {\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n    const [loading, setloading] = useState(false);\r\n    const [error, setError] = useState();\r\n    useEffect(() => {\r\n        async function fetchUsers() {\r\n        try {\r\n            setloading(true);\r\n                const response = await fetch('http://localhost:5000/api/users');\r\n                const responsedata = await response.json();\r\n                setLoadedUsers(responsedata.allUsers);\r\n                setloading(false);\r\n            }catch (err) {\r\n                setloading(false);\r\n                setError(err.message || \"couldn't fetch Users\");\r\n                throw err;\r\n            }\r\n        } \r\n        fetchUsers();\r\n    }, []);\r\n\r\n\r\n    function DeleteUser(userid) {\r\n        setLoadedUsers(prevUser => {\r\n            return prevUser.filter(p => p.id !== userid)\r\n        });\r\n    }\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n    return <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {loading && <LoadingSpinner asOverlay />}\r\n        {loadedUsers && <UserList items={loadedUsers} deleteUSER={DeleteUser} />}\r\n        </React.Fragment>\r\n\r\n}\r\n\r\nexport default Users;","import React, { useContext } from 'react'\r\nimport Card from '../shared/card';\r\nimport { Authcontext } from '../shared/auth-context';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport { Button } from 'react-bootstrap';\r\nimport LoadingSpinner from '../shared/loadingspinner';\r\nimport { useState } from 'react';\r\nimport ErrorModal from '../shared/ErrorModal';\r\nimport Modal from '../shared/Modal';\r\nimport \"../STYLING/products.css\";\r\n\r\nfunction ProductItem(props) {\r\n  const [loading, setloading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const auth = useContext(Authcontext);\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n\r\n  };\r\n\r\n  async function DeleteHandler() {\r\n    try {\r\n      setloading(true);\r\n      await fetch(`http://localhost:5000/api/products/${props.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n      props.deleteProduct(props.id);\r\n      console.log(\"deleting products\");\r\n      setloading(false);\r\n      history.push('/users');\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message);\r\n      setloading(false);\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      <Modal\r\n\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        theheader=\"Delete your product\"\r\n        thefooter={\r\n          <React.Fragment>\r\n            <Button  style={{margin:'10px'}}  variant='outline-light btn-primary' inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button variant='outline-light btn-danger' danger onClick={DeleteHandler}>\r\n              CONFIRM\r\n            </Button>\r\n\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        {loading && <LoadingSpinner asOverlay />}\r\n        <h3>\r\n          Are you sure you want to delete this product ?\r\n        </h3>\r\n      </Modal>\r\n\r\n      <li className=\"product-item\">\r\n        <Card className=\"product-item__content\">\r\n\r\n          <div className=\"product-item__image\">\r\n            <img src={`http://localhost:5000/${props.ProductIMG}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"product-item__info\">\r\n            <h2>Product: {props.theProduct}</h2>\r\n            <h3>Description: {props.description}</h3>\r\n\r\n            <h3>Price:  {props.price}$  </h3>\r\n               \r\n          \r\n            <div className=\"product-item__actions\">\r\n              {auth.userId === props.owner && <Link to={`/products/${props.id}`}><Button variant=\"outline-light btn-primary\">EDIT</Button></Link>}\r\n              {auth.userId === props.owner && <Button variant=\"outline-light btn-danger\" onClick={showDeleteWarningHandler} >DELETE</Button>}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductItem from './Prodcutitem';\r\nimport Card from '../shared/card';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"../STYLING/products.css\";\r\nfunction Productlist(props) {\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className='product-list center'>\r\n      <Card>\r\n        <h3>NO PRODUCTS FOUND FOR THIS USER , ADD ONE MAYBE ?</h3>\r\n        <Link to={\"/products/new\"}><Button variant='outline-light btn-primary'>Add Product</Button></Link>\r\n        </Card>\r\n      </div>)\r\n\r\n  }\r\n\r\n  return (\r\n    <ul className=\"product-list\"> \r\n    {props.items.map(product => {\r\n      return (\r\n        <ProductItem\r\n          key={product.id}\r\n          id={product.id}\r\n          theProduct={product.product}\r\n          price={product.price}\r\n          deleteProduct={props.ondelete}\r\n          ProductIMG={product.image}\r\n          description={product.description}\r\n          owner={product.owner}\r\n        />\r\n      )\r\n    })}\r\n    </ul>\r\n\r\n  )\r\n}\r\n\r\nexport default Productlist","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport ProductList from '../Productlist';\r\nimport LoadingSpinner from '../../shared/loadingspinner';\r\nimport ErrorModal from '../../shared/ErrorModal';\r\n\r\n\r\n\r\nfunction Products() {\r\n  const [loading, setisloading] = useState(false);\r\n  const [loadedProducts, setLoadedProducts] = useState();\r\n  const [error, setError] = useState();\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n\r\n    async function fetchUserProducts() {\r\n      try {\r\n        setisloading(true);\r\n        const response = await fetch(`http://localhost:5000/api/products/user/${userId}`)\r\n\r\n        const responseData = await response.json();\r\n        if(!response.ok){\r\n          throw new Error(responseData.message);\r\n\r\n        }\r\n        setLoadedProducts(responseData.products);\r\n        setisloading(false);\r\n      } catch (err) {\r\n        setError(err.message || \"failed to fetch products\");\r\n        throw err;\r\n      }\r\n\r\n    }\r\n    fetchUserProducts();\r\n\r\n  }, [userId]);\r\n\r\n\r\n\r\n  function deletePlace(deleteid) {\r\n    return (prevProduct => {\r\n      return prevProduct.filter(p => p.id !== deleteid)\r\n    })\r\n  }\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {loadedProducts && <ProductList items={loadedProducts} ondelete={deletePlace} />}\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default Products;","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport \"../STYLING/inputs.css\"\r\n\r\nfunction inputReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction Input(props) {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.theupdate || \"\",\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value);\r\n    }, [id, value, onInput]);\r\n\r\n    function changeHandler(event) {\r\n        dispatch({\r\n            type: 'CHANGE',\r\n            val: event.target.value,\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const element =\r\n        props.element === 'input' ? (\r\n            <input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={changeHandler}\r\n                value={inputState.value}\r\n                required\r\n                minLength={props.min}\r\n                maxLength={props.max}\r\n            />\r\n        ) : (\r\n            <textarea\r\n                id={props.id}\r\n                rows={props.rows || 3}\r\n                onChange={changeHandler}\r\n                value={inputState.value}\r\n                placeholder={props.placeholder}\r\n                required\r\n               \r\n            />\r\n        );\r\n\r\n\r\n    return (\r\n        <div className='form_control'>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { useCallback, useEffect, useReducer, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Card } from 'react-bootstrap';\r\nimport '../../STYLING/products.css'\r\nimport Input from '../../shared/Input';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Authcontext } from '../../shared/auth-context';\r\nimport { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport LoadingSpinner from '../../shared/loadingspinner';\r\n\r\nfunction updateReducer(state, action) {\r\n\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value }\r\n        }\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nfunction UpdateProducts() {\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const auth = useContext(Authcontext);\r\n  const [loadedProducts, setloadedProducts] = useState();\r\n  const productId = useParams().productId;\r\n\r\n  const [updateState, dispatch] = useReducer(updateReducer, {\r\n    inputs: {\r\n      product: {\r\n        value: \"\"\r\n\r\n      },\r\n      price: {\r\n        value: \"\",\r\n\r\n      },\r\n      description: {\r\n        value: \"\"\r\n\r\n      }\r\n    }\r\n  });\r\n\r\n  const inputhandler = useCallback((id, value) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchProducts() {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`http://localhost:5000/api/products/${productId}`);\r\n        const responsedata = await response.json();\r\n        setloadedProducts(responsedata.products);\r\n\r\n        dispatch({\r\n          product: {\r\n            value: responsedata.products.product,\r\n          },\r\n          description: {\r\n            value: responsedata.products.description,\r\n          },\r\n          price: {\r\n            value: responsedata.products.price,\r\n          },\r\n\r\n        });\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchProducts();\r\n  }, [productId, dispatch]);\r\n\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  async function Productsubmit(event) {\r\n\r\n    console.log(updateState.inputs);\r\n    event.preventDefault();\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`http://localhost:5000/api/products/${productId}`, {\r\n        method: 'PATCH',\r\n\r\n        body: JSON.stringify({\r\n          product: updateState.inputs.product.value,\r\n          price: updateState.inputs.price.value,\r\n          description: updateState.inputs.description.value,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const responsedata = await response.json();\r\n      setloadedProducts(responsedata.products);\r\n\r\n      history.push('/' + auth.userId + '/products');\r\n    } catch (err) {\r\n      console.log(err);\r\n    \r\n      setIsLoading(false);\r\n    }\r\n\r\n  }\r\n  if (isloading) {\r\n    return (\r\n      <div className=\"center\">\r\n        {isloading && <LoadingSpinner asOverlay />}\r\n      </div>\r\n    );\r\n  }\r\n  if (!loadedProducts) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find product!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (loadedProducts &&\r\n    <form className=\"product__form\" onSubmit={Productsubmit}>\r\n      {isloading && <LoadingSpinner asOverlay />}\r\n      <Input\r\n        id=\"product\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Product name:\"\r\n        onInput={inputhandler}\r\n        theupdate={loadedProducts.product}\r\n      />\r\n      <Input\r\n        element=\"input\"\r\n        id=\"price\"\r\n        label=\"Price:\"\r\n        onInput={inputhandler}\r\n        type=\"number\"\r\n        theupdate={loadedProducts.price}\r\n      />\r\n      <Input\r\n        element=\"textarea\"\r\n        id=\"description\"\r\n        label=\"Description:\"\r\n        onInput={inputhandler}\r\n        type=\"text\"\r\n        theupdate={loadedProducts.description}\r\n    \r\n      />\r\n      <Button variant='outline-light btn-primary' type=\"submit\">\r\n        UPDATE PRODUCT\r\n      </Button>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default UpdateProducts;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"../STYLING/imageUploads.css\";\r\nfunction ImageUpload(props) {\r\n    const [file, setfile] = useState();\r\n    const [previewURL, setpreview] = useState();\r\n  \r\n\r\n    const filePicker = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setpreview(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n\r\n    }, [file]);\r\n\r\n    function pickedHandler(event) {\r\n        let pickedFile;\r\n       \r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setfile(pickedFile);\r\n         \r\n        } \r\n        props.onInput(props.id, pickedFile);\r\n\r\n    };\r\n\r\n    function upload() {\r\n        filePicker.current.click();\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='center'>\r\n            <input\r\n                type=\"file\"\r\n                id={props.id}\r\n                ref={filePicker}\r\n                style={{ display: 'none' }}\r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickedHandler}\r\n                required\r\n            />\r\n\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewURL && <img src={previewURL} alt=\"preview\" />}\r\n                    {!previewURL && <p>Pick an image</p>}\r\n                </div>\r\n                <Button variant='outline-light btn-primary' type=\"button\" onClick={upload}>Choose image</Button>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ImageUpload;","import React, { useContext, useState, useReducer, useCallback } from 'react';\r\nimport Input from '../../shared/Input';\r\nimport ErrorModal from '../../shared/ErrorModal';\r\nimport LoadingSpinner from '../../shared/loadingspinner';\r\nimport Card from '../../shared/card';\r\nimport ImageUpload from '../../shared/imageUpload';\r\nimport { useHistory } from 'react-router';\r\nimport { Authcontext } from '../../shared/auth-context';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport \"../../STYLING/auth.css\";\r\n\r\n\r\nconst AuthReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'INPUT_CHANGE':\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value }\r\n                },\r\n\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nfunction Auth() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const [isloginMode, setisloginMode] = useState(true);\r\n    const auth = useContext(Authcontext);\r\n\r\n    const [Authstate, dispatch] = useReducer(AuthReducer, {\r\n        inputs: {\r\n            email: {\r\n                value: \"\",\r\n            },\r\n            password: {\r\n                value: \"\",\r\n            },\r\n        }\r\n    });\r\n\r\n    const inputhandler = useCallback((id, value) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    function modechange() {\r\n        if (!isloginMode) {\r\n            dispatch({\r\n                ...Authstate.inputs,\r\n                name: undefined,\r\n                image: undefined,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                ...Authstate.inputs,\r\n                name: {\r\n                    value: '',\r\n                },\r\n                image: {\r\n                    value: null,\r\n                }\r\n            });\r\n        }\r\n        setisloginMode((prevmode) => {\r\n            return !prevmode;\r\n        });\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n    async function Submithandler(event) {\r\n        event.preventDefault();\r\n        if (isloginMode) {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await fetch('http://localhost:5000/api/users/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: Authstate.inputs.email.value,\r\n                        password: Authstate.inputs.password.value,\r\n                    }),\r\n\r\n                });\r\n                const responsedata = await response.json();\r\n              if(!response.ok){\r\n                throw new Error(responsedata.message);\r\n\r\n              }\r\n\r\n                auth.Login(responsedata.user.id);\r\n                setIsLoading(false);\r\n                history.push('/users');\r\n             \r\n            } catch (err) {\r\n                setIsLoading(false);\r\n                console.log(err);\r\n                setError(err.message);\r\n            }\r\n           \r\n        } else {\r\n            try {\r\n                setIsLoading(true);\r\n                const formDATA = new FormData();\r\n                formDATA.append('email', Authstate.inputs.email.value);\r\n                formDATA.append('password', Authstate.inputs.password.value);\r\n                formDATA.append('name', Authstate.inputs.name.value);\r\n                formDATA.append('image', Authstate.inputs.image.value);\r\n                const response = await fetch('http://localhost:5000/api/users/signup', {\r\n                    method: 'POST',\r\n                    body: formDATA,\r\n                });\r\n                const responsedata = await response.json();\r\n                auth.Login(responsedata.user.id);\r\n                setIsLoading(false);\r\n                history.push('/users');\r\n            } catch (err) {\r\n                setIsLoading(false);\r\n                setError(err.messsage || \"something went wrong ,please try again\");\r\n                throw err;\r\n            }\r\n         \r\n        }\r\n\r\n    }\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n    return (\r\n<React.Fragment>\r\n<ErrorModal error={error} onClear={clearError}/>\r\n        <Card\r\n            className='authentication'>\r\n                 {isLoading && <LoadingSpinner asOverlay />}\r\n            {isloginMode ? <h1>Login Required</h1> : <h1>SignUp Required</h1>}\r\n            <hr />\r\n            <form onSubmit={Submithandler}>\r\n           \r\n                {!isloginMode &&\r\n                    <Input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        placeholder='Name...'\r\n                        label=\"Name\"\r\n                        element=\"input\"\r\n                        onInput={inputhandler}\r\n                    />}\r\n                {!isloginMode &&\r\n                    <ImageUpload\r\n                        id=\"image\"\r\n                        onInput={inputhandler}\r\n                    />}\r\n                <Input\r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    type=\"email\"\r\n                    placeholder='Email...'\r\n                    label=\"Email\"\r\n                    onInput={inputhandler}\r\n\r\n                />\r\n\r\n                <Input\r\n                    id=\"password\"\r\n                    element=\"input\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    placeholder='Password...'\r\n                    onInput={inputhandler}\r\n                    min=\"6\"\r\n                />\r\n\r\n                <Button variant=\"outline-light btn-primary\" type=\"submit\">{isloginMode ? \"LOGIN\" : \"SIGNUP\"}</Button>\r\n            </form>\r\n            <Button variant=\"outline-light btn-secondary\" onClick={modechange}>{isloginMode ? \"SWITCH TO SIGNUP\" : \"SWITCH TO LOGIN\"}</Button>\r\n\r\n\r\n        </Card>\r\n</React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport { CSSTransition} from 'react-transition-group';\r\n\r\nimport \"../../STYLING/sideDrawer.css\";\r\n\r\nfunction Side(props) {\r\n  return (\r\n   \r\n        <CSSTransition\r\n          in={props.show}\r\n          timeout={200}  \r\n          classNames=\"slide-in-left\"\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n <aside className='side-drawer' onClick={props.clicked}>{props.children}</aside> \r\n        </CSSTransition>\r\n        \r\n  \r\n  )\r\n}\r\n\r\nexport default Side;","import React from 'react';\r\n\r\nimport '../STYLING/mainheader.css';\r\n\r\nconst MainHeader = props => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;","import React , {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authcontext } from '../shared/auth-context';\r\nimport '../STYLING/navlinks.css';\r\n\r\nconst NavLinks = () => {\r\n\r\nconst auth =  useContext(Authcontext);\r\n\r\n\r\n  return <ul className=\"nav-links\">\r\n    <li><NavLink to=\"/\" exact >HOME</NavLink></li>\r\n    \r\n    <li><NavLink to=\"/users\">USERS</NavLink></li>\r\n\r\n    {auth.isloggedin && \r\n    <li><NavLink to={`/${auth.userId}/products`}> MY PRODUCTS</NavLink></li>\r\n    }\r\n    {auth.isloggedin && \r\n    <li><NavLink to=\"/products/new\">ADD PRODUCTS</NavLink></li> \r\n  }\r\n  {!auth.isloggedin && \r\n    <li><NavLink to=\"/auth\">LOGIN/SIGNUP</NavLink></li>\r\n  }\r\n\r\n    {auth.isloggedin && <button onClick={auth.Logout}>LOGOUT</button>}\r\n  </ul>\r\n};\r\n\r\nexport default NavLinks;","import React , { useState} from 'react'\r\nimport Side from '../components/pages/Side';\r\nimport MainHeader from './mainheader';\r\nimport { Link } from 'react-router-dom';\r\nimport Backdrop from '../components/pages/Backdrop';\r\n\r\nimport \"../STYLING/navlinks.css\";\r\nimport NavLinks from './NavLinks';\r\n\r\nfunction MAINNavLinks() {\r\n\r\n\r\n\r\n  const [open,setopen] = useState(false);\r\n\r\n  function handleDrawer(){\r\n    setopen((e)=>{\r\n        return !e;\r\n    })\r\n  }\r\n  return (\r\n   \r\n\r\n   \r\n   <React.Fragment>\r\n{open && <Backdrop onClick={handleDrawer}/>}\r\n<Side show={open} clicked={handleDrawer} >\r\n<nav className=\"main-navigation__drawer-nav\">\r\n<NavLinks/>\r\n</nav>\r\n</Side>\r\n\r\n<MainHeader>\r\n      <button onClick={handleDrawer} className=\"main-navigation__menu-btn\">\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n\r\n        <h1 className=\"main-navigation__title\">\r\n        <Link to=\"/\">HOMEPAGE</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n</MainHeader>\r\n</React.Fragment>\r\n  )\r\n}\r\n\r\nexport default  MAINNavLinks;","import React, { useCallback, useReducer } from 'react'\r\nimport Input from '../../shared/Input';\r\nimport { Button } from 'react-bootstrap';\r\nimport ImageUpload from '../../shared/imageUpload';\r\nimport { useHistory } from 'react-router';\r\nimport { Authcontext } from '../../shared/auth-context';\r\nimport { useContext } from 'react';\r\nimport LoadingSpinner from '../../shared/loadingspinner';\r\nimport { useState } from 'react';\r\nimport \"../../STYLING/products.css\";\r\nimport ErrorModal from '../../shared/ErrorModal';\r\nconst formReducer = (state, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'INPUT_CHANGE':\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        } // go through all the inputs in state.inputs\r\n\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value }\r\n        },\r\n\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n\r\nfunction AddProducts() {\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: {\r\n      product: {\r\n        value: \"\",\r\n\r\n      },\r\n      price: {\r\n        value: \"\",\r\n\r\n      },\r\n      image: {\r\n        value: null\r\n      },\r\n      description: {\r\n        value: \"\"\r\n      }\r\n    },\r\n\r\n  })\r\n\r\n  const inputHandler = useCallback((id, Value) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: Value,\r\n      inputId: id\r\n    });\r\n\r\n  }, []);\r\n\r\n  const auth = useContext(Authcontext);\r\n  const history = useHistory();\r\n  async function productsubmit(event) {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n    try {\r\n      setIsLoading(true);\r\n      const formData = new FormData();\r\n      formData.append('image', formState.inputs.image.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('price', formState.inputs.price.value);\r\n      formData.append('product', formState.inputs.product.value);\r\n      formData.append('owner', auth.userId);\r\n\r\n     const response = await fetch('http://localhost:5000/api/products', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const responseData = await response.json();\r\n      if(!response.ok){\r\n        throw new Error(responseData.message);\r\n      }\r\n      history.push('/users');\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      setError(err.message || \"failed to fetch addproduct page\");\r\n      throw err;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"add-product__form\" onSubmit={productsubmit}>\r\n        {isloading && <LoadingSpinner AsProductLay />}\r\n        <Input\r\n          id=\"product\"\r\n          element=\"input\"\r\n          label=\"Product\"\r\n          onInput={inputHandler}\r\n          type=\"text\"\r\n\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n        />\r\n\r\n        <Input\r\n          id=\"price\"\r\n          element=\"input\"\r\n          label=\"Price\"\r\n          type=\"number\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          onInput={inputHandler}\r\n\r\n        />\r\n        <Button variant='outline-light btn-primary' type=\"submit\" >\r\n          ADD PRODUCT\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AddProducts;","import React from 'react'\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n\r\n    <img src=\"https://i.pinimg.com/originals/1c/a7/49/1ca74946ed770bb635e4de4711bd861f.gif\" alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;","import React, { useCallback, useState,useEffect } from \"react\";\r\n\r\nimport Footer from \"./components/footerDate\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Users from \"./USERS/pages/Users\";\r\nimport UsersProducts from \"./PRODUCTS/pages/userProducts\";\r\n\r\n\r\nimport UpdateProducts from \"./PRODUCTS/pages/UpdateProducts\";\r\nimport Auth from \"./USERS/pages/Auth\";\r\nimport { Authcontext } from \"./shared/auth-context\";\r\nimport MAINNav from \"./shared/MainNav\";\r\nimport AddProducts from \"./PRODUCTS/pages/addProducts\";\r\nimport HomePage from \"./HomePage\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    const [userId, setuserId] = useState(false);\r\n    const [loggedIn, setIsloggedIn] = useState(false);\r\n\r\n    const login = useCallback((uid,expirationdate) => {\r\n        setIsloggedIn(true);\r\n        setuserId(uid);\r\n\r\n        const expirationTime = expirationdate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        localStorage.setItem('userData'\r\n        , JSON.stringify({\r\n          userId: uid,\r\n          expiration:expirationTime.toISOString()\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (storedData && storedData.userId && new Date(storedData.expiration) > new Date()) {\r\n          login(storedData.userId,  new Date(storedData.expiration));\r\n        }\r\n      }, [login]);\r\n\r\n    const logout = useCallback(() => {\r\n        setIsloggedIn(false);\r\n        setuserId(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    let routes;\r\n    if (loggedIn) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                </Route>\r\n                <Route path=\"/users\" exact>\r\n                    <Users />\r\n                </Route>\r\n                <Route path=\"/:userId/products\" exact>\r\n                    <UsersProducts />\r\n                </Route>\r\n                <Route path=\"/products/new\" exact>\r\n                    <AddProducts />\r\n                </Route>\r\n                <Route path=\"/products/:productId\" exact>\r\n                    <UpdateProducts />\r\n                </Route>\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        );\r\n    } else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <HomePage />\r\n                </Route>\r\n                <Route path=\"/users\" exact>\r\n                    <Users />\r\n                </Route>\r\n                <Route path=\"/:userId/products\" exact>\r\n                    <UsersProducts />\r\n                </Route>\r\n                <Route path=\"/auth\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect to=\"/auth\" />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Authcontext.Provider\r\n            value={{\r\n                isloggedin: loggedIn,\r\n                userId: userId,\r\n                Login: login,\r\n                Logout: logout\r\n            }}>\r\n            <Router >\r\n                <MAINNav />\r\n                <main>{routes}</main>\r\n                <Footer />\r\n            </Router>\r\n\r\n\r\n        </Authcontext.Provider>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './app';\n\n\nReactDOM.render(\n\n    <App />\n    ,\n    document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}